trigger: none
#   branches:
#     include:
#       - release/*
#   tags:
#     include: ['*']
pr: none

resources:
  repositories:
    - repository: templates
      type: github
      name: microsoft/vscode-engineering
      ref: logging
      endpoint: Monaco

parameters:
  - name: publishExtension
    displayName: ðŸš€ Publish Extension
    type: boolean
    default: false

extends:
  template: azure-pipelines/extension/stable.yml@templates
  parameters:
    l10nSourcePaths: ./src
    l10nShouldProcess: false
    publishExtension: ${{ parameters.publishExtension }}
    buildPlatforms:
      - name: Linux
        vsceTarget: ''
      - name: Linux
        vsceTarget: 'web'
      - name: Linux
        packageArch: arm64
        vsceTarget: linux-arm64
      - name: Linux
        packageArch: arm
        vsceTarget: linux-armhf
      - name: Linux
        packageArch: x64
        vsceTarget: linux-x64
      - name: MacOS
        packageArch: arm64
        vsceTarget: darwin-arm64
      - name: MacOS
        packageArch: x64
        vsceTarget: darwin-x64
      - name: Windows
        packageArch: ia32
        vsceTarget: win32-ia32
      - name: Windows
        packageArch: x64
        vsceTarget: win32-x64
    buildSteps:
      - script: |
          sudo apt-get update
          sudo apt-get install libpango1.0-dev libgif-dev
        displayName: Install dependencies for zeromq.js
        condition: or(eq(variables.vsceTarget, ''), contains(variables.vsceTarget, 'linux'), contains(variables.vsceTarget, 'web'))

      - script: npm i -g npm@8.15.1
        displayName: Install npm 8.15.1

      - script: npm ci --foreground-scripts
        displayName: Install dependencies
        env:
          npm_config_build_from_source: true
          VSC_PACKAGE_ARCH: $(packageArch)
          VSC_VSCE_TARGET: $(vsceTarget)

      - script: gulp clean
        displayName: Clean

      - task: UsePythonVersion@0
        inputs:
          versionSpec: '3.8'
          addToPath: true
          architecture: 'x64'

      - script: python -m pip --disable-pip-version-check install -t ./pythonFiles/lib/python --no-cache-dir --implementation py --no-deps --upgrade -r ./requirements.txt
        displayName: Install Python libs

      - script: npm run updateBuildNumber
        displayName: Update build number

      - script: npm run prePublishBundleStable
        displayName: Build
        env:
          VSC_PACKAGE_ARCH: $(packageArch)
          VSC_VSCE_TARGET: $(vsceTarget)
